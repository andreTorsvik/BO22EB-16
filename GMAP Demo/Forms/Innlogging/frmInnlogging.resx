<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQkJAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAkJCQHAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeY3KjfI2kxWNufpBCQkVGPT03Knd4
        hZ+RlaPem52r+nuNo9ZqdIehTlRaWysrKwYAAAAAAAAAAAAAAAAAAAAAbXiMn7PV/v+z1f7/pMHl+6Sl
        sv3k5vj/5uj6/9DT5P+z1f7/s9X+/6nH7f9haXigAAAAAAAAAAAAAAAAAAAAAG14jJ+z1f7/s9X+/7PV
        /v/Fx9f/5uj6/+bo+v/S1eb/s9X+/7PV/v+z1f7/bXiMnwAAAAAAAAAAAAAAAAAAAABteIyfs9X+/7PV
        /v+z1f7/0dXm/+bo+v/m6Pr/xcfX/7PV/v+z1f7/s9X+/214jJ8AAAAAAAAAAAAAAAAAAAAAbXiMn7PV
        /v+z1f7/s9X+/8vN3v/m6Pr/5uj6/8XH1/+z1f7/fou0/6zM9P9teIyfAAAAAAAAAAAAAAAAAAAAAG14
        jJ+z1f7/s9X+/7PV/v/Lzd7/5uj6/+bo+v/Fx9f/gpK7/2VW0f9mZ53/a3aJoAAAAAAAAAAAAAAAAAAA
        AABteIyfs9X+/7PV/v+z1f7/xcfX/+bo+v/m6Pr/uLnK/2NduP9kU9X/ZVXX/1NSccgAAAAAAAAAAAAA
        AAAAAAAAbXiMn7PV/v+z1f7/s9X+/8XH1//m6Pr/5uj6/4F7qP9nW7X/qKnZ/3t0vf9QRo/xJCQkBwAA
        AAAAAAAAAAAAAGFpeKCpx+3/s9X+/7PV/v/Fx9f/5uj6/+Tm+P9aUIz+pKTU/+/9/v/X4+j/Wkqy/y4l
        ODcAAAAAAAAAAAAAAAArKysGTlRaW2t0h6J7jKTXj5Ge+5GVo953eIWfSTt8wXpzu//X4uX/n6HD/1ZJ
        pvcrHBwSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjkcHAkAAAAAAAAAADguUjJPQI/TVkeq/lRF
        oOxFNmt3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzMzBTkr
        PTYtHh4RAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAMYPAADAAwAAwAMAAMADAADAAwAAwAMAAMAD
        AADAAwAAwAMAAPADAAD/xwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzMzMFLh8fIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAErHh4qMxoaCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACkfHzJBP0TsRkRL0z86PZsqICA3AAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAORwcCTgv
        L1JSTlLFWVNZ73p6hfhPUFngQDxBxDgxM2koGxsTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAALSMeM3KAlO6z1f7/n7vd/2x3iuRFQ0rWPDc6qy0iIkopISEfPTQ3cE5L
        TtRfXGHxmZej/dPU5P/m6Pr/sLPD/7PV/v+vzvb/h5u391RYY90/PkPJOTMzeSsiIh4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtIx4zcoCU7rPV/v+z1f7/s9X+/7PV/v+lw+j/eomg9VxY
        Xfmsqrf/3+Dx/+bo+v/m6Pr/5uj6/+bo+v/Q1ur/s9X+/7PV/v+z1f7/s9X+/7LS+/+Sqsj/S0tU6yse
        HioAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0jHjNygJTus9X+/7PV/v+z1f7/s9X+/7PV
        /v+z1f7/paa0/+bo+v/m6Pr/5uj6/+bo+v/m6Pr/5uj6/6WmtP+z1f7/s9X+/7PV/v+z1f7/s9X+/7PV
        /v9ygJTuLSMeMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALSMeM3KAlO6z1f7/s9X+/7PV
        /v+z1f7/s9X+/7PV/v+lprT/5uj6/+bo+v/m6Pr/5uj6/+bo+v/m6Pr/paa0/7PV/v+z1f7/s9X+/7PV
        /v+z1f7/s9X+/3KAlO4tIx4zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtIx4zcoCU7rPV
        /v+z1f7/s9X+/7PV/v+z1f7/s9X+/6WmtP/m6Pr/5uj6/+bo+v/m6Pr/5uj6/+bo+v/W3PH/s9X+/7PV
        /v+z1f7/s9X+/7PV/v+z1f7/coCU7i0jHjMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0j
        HjNygJTus9X+/7PV/v+z1f7/s9X+/7PV/v+z1f7/tLfH/+bo+v/m6Pr/5uj6/+bo+v/m6Pr/5uj6/6Wm
        tP+z1f7/s9X+/7PV/v+z1f7/s9X+/7PV/v9ygJTuLSMeMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALSMeM3KAlO6z1f7/s9X+/7PV/v+z1f7/s9X+/7PV/v/DyNv/5uj6/+bo+v/m6Pr/5uj6/+bo
        +v/m6Pr/paa0/7PV/v+z1f7/s9X+/7PV/v+z1f7/s9X+/3KAlO4tIx4zAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAtIx4zcoCU7rPV/v+z1f7/s9X+/7PV/v+z1f7/s9X+/6WmtP/m6Pr/5uj6/+bo
        +v/m6Pr/5uj6/+bo+v+lprT/s9X+/7PV/v+z1f7/ob3g/7PV/v+z1f7/coCU7i0jHjMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0jHjNygJTus9X+/7PV/v+z1f7/s9X+/7PV/v+z1f7/u7/R/+bo
        +v/m6Pr/5uj6/+bo+v/m6Pr/5uj6/6WmtP+z1f7/s9X+/2dvi/9BOVP/jqPE/7PV/v9ygJTuLSMeMwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALSMeM3KAlO6z1f7/s9X+/7PV/v+z1f7/s9X+/7PV
        /v+7v9H/5uj6/+bo+v/m6Pr/5uj6/+bo+v/m6Pr/paa0/7PV/v+Ck7D/UkmL/2pZ6/9IQ2P/or3h/3KA
        lO4tIx4zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtIx4zcoCU7rPV/v+z1f7/s9X+/7PV
        /v+z1f7/s9X+/6WmtP/m6Pr/5uj6/+bo+v/m6Pr/5uj6/+bo+v+lprT/m7XX/0pCa/9sW/D/bFvx/2dW
        3/9KR2D/b3yP7y0jHjMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0jHjNygJTus9X+/7PV
        /v+z1f7/s9X+/7PV/v+z1f7/paa0/+bo+v/m6Pr/5uj6/+bo+v/m6Pr/5uj6/6Gir/9LSGL/aVjl/2xb
        8f9sW/H/bFvx/2BRwf9KR1n5LSMeMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALSMeM3KA
        lO6z1f7/s9X+/7PV/v+z1f7/s9X+/7PV/v+lprT/5uj6/+bo+v/m6Pr/5uj6/+bo+v/m6Pr/bWd5/1hL
        sP9pWef/WEmw/1RHpv9aSrb/bFvw/0U8bf4tIiJbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAtIx4zcoCU7rPV/v+z1f7/s9X+/7PV/v+z1f7/s9X+/6WmtP/m6Pr/5uj6/+bo+v/m6Pr/5uj6/9ze
        7/9NRGX/X1DJ/1ZIqv9nXK7/cWis/2JWsv9TRJ7/YlLQ/zUqQM4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAC0jHjNygJTus9X+/7PV/v+z1f7/s9X+/7PV/v+z1f7/paa0/+bo+v/m6Pr/5uj6/+bo
        +v/m6Pr/mpal/1pMr/9XSKz/eHOa/+Tx8v/v/f7/zNXa/29mq/9TRaL/QjZq5y8cHBsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAALSMeM3KAlO6z1f7/s9X+/7PV/v+z1f7/s9X+/7PV/v+lprT/5uj6/+bo
        +v/m6Pr/5uj6/+bo+v9kXHH/VUan/2ZcsP/l8vP/7/3+/+/9/v/v/f7/r7TA/1ZHq/9WSaz+LiYrXgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArHh4qS0tU65KqyP+y0vv/s9X+/7PV/v+z1f7/s9X+/6Wm
        tP/m6Pr/5uj6/+bo+v/m6Pr/3+Dx/09GX/9VR6j/c2uw/+/9/v/v/f7/7/3+/+/9/v/U3uD/YFHB/1xO
        wf80KzyEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApISEfSEZNi0ZGTdRaXmvrip25/q/O
        9v+z1f7/paa0/+bo+v/T1OT/m5mj/2RgZflYVFnjOjFE3FdIrf9jV7b/0drf/+/9/v/v/f7/7/3+/5ye
        tP9gUMn/VUeo+i4lK1kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgb
        GxM4MTNpQDxBxE9QWeBlYmn6WVNZ71JOUsU4Ly9SORwcCQAAAAAvIi9MTkCO71NFof90arD/rbS9/9Ha
        2/+bnLD/al28/2dW4f86L1DlJycnDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMxoaCi0iHC0AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAA0KD23WEmv+1RF
        o/9XSa7/W06v/1dIrf9fT8X/STyA8TMoOG0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsr
        KwY2Kj+rQjZs41pKsf1YSbD/Vkeo9zsvUt4zKTxvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAuHx8hMyYuajMoOYYsJCdWMCAgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////////////////////j/g//4HAB/+AAAH/gA
        AB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAD/gAAA/4AAAP+AAAB/wA
        AA//weAP///gH///8D////7/////////////////
</value>
  </data>
</root>